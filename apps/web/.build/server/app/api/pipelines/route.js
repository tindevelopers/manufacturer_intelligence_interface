"use strict";(()=>{var e={};e.id=676,e.ids=[676],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},1233:(e,t,i)=>{i.r(t),i.d(t,{originalPathname:()=>y,patchFetch:()=>m,requestAsyncStorage:()=>h,routeModule:()=>d,serverHooks:()=>f,staticGenerationAsyncStorage:()=>P});var r={};i.r(r),i.d(r,{GET:()=>l});var s=i(4520),n=i(678),o=i(1240),a=i(4948),p=i(9240);let c="fd507c760",u="1398624bb0";async function l(){try{let e=process.env.ABACUS_API_KEY;if(!e||"placeholder_api_key_please_replace"===e)return a.NextResponse.json({success:!1,error:"Please configure your Abacus.AI API key in the .env file. See README.md for instructions.",code:"API_KEY_NOT_CONFIGURED"},{status:200});let t=new p.Z(e),[i,r]=await Promise.all([t.getPipeline(c).catch(e=>({error:e?.message})),t.getPipeline(u).catch(e=>({error:e?.message}))]),[s,n]=await Promise.all([t.listPipelineExecutions(c).catch(e=>({error:e?.message})),t.listPipelineExecutions(u).catch(e=>({error:e?.message}))]);return a.NextResponse.json({success:!0,data:{manufacturer:{pipeline:i,executions:s},product:{pipeline:r,executions:n}}})}catch(i){console.error("Pipelines API error:",i);let e=i instanceof Error?i.message:"Failed to fetch pipelines data",t=e?.toLowerCase()?.includes("not found")||e?.toLowerCase()?.includes("unauthorized")||e?.toLowerCase()?.includes("forbidden");return a.NextResponse.json({success:!1,error:t?"Invalid API key or insufficient permissions. Please verify your API key in the .env file.":e,code:t?"AUTH_ERROR":"API_ERROR"},{status:200})}}let d=new s.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/pipelines/route",pathname:"/api/pipelines",filename:"route",bundlePath:"app/api/pipelines/route"},resolvedPagePath:"/home/ubuntu/manufacturer_intelligence_interface/apps/web/app/api/pipelines/route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:h,staticGenerationAsyncStorage:P,serverHooks:f}=d,y="/api/pipelines/route";function m(){return(0,o.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:P})}},9240:(e,t,i)=>{i.d(t,{Z:()=>s});let r=process.env.ABACUS_API_KEY||"";class s{constructor(e){this.apiKey=e||r,this.baseUrl="https://api.abacus.ai"}async fetch(e,t){let i=`${this.baseUrl}${e}`,r=await fetch(i,{...t,headers:{"Content-Type":"application/json",apiKey:this.apiKey,...t?.headers}});if(!r?.ok)throw Error(`API request failed: ${r?.statusText||"Unknown error"}`);return r.json()}async getPipeline(e){return this.fetch("/v0/describePipeline",{method:"POST",body:JSON.stringify({pipelineId:e})})}async listPipelineVersions(e){return this.fetch("/v0/listPipelineVersions",{method:"POST",body:JSON.stringify({pipelineId:e,limit:100})})}async getPipelineVersion(e){return this.fetch("/v0/describePipelineVersion",{method:"POST",body:JSON.stringify({pipelineVersion:e})})}async listPipelineExecutions(e){return this.fetch("/v0/listPipelineExecutions",{method:"POST",body:JSON.stringify({pipelineId:e,limit:50})})}async getFeatureGroupData(e){return this.fetch("/v0/describeFeatureGroup",{method:"POST",body:JSON.stringify({featureGroupId:e})})}}new s}};var t=require("../../../webpack-runtime.js");t.C(e);var i=e=>t(t.s=e),r=t.X(0,[685,433],()=>i(1233));module.exports=r})();